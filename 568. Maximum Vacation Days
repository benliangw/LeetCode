class Solution {
public:
    int maxVacationDays(vector<vector<int>>& flights, vector<vector<int>>& days) 
    {
        int n = flights.size();
        int k = days[0].size();
        vector<vector<int>> dp(k, vector<int>(n, 0));
        int res = 0;
        for(int i = k-1; i >= 0; i--)
        {
            for(int j = 0; j < n; j++)
            {
                dp[i][j] = days[j][i];
                for(int p = 0; p < n; p++)
                {
                    if((p == j || flights[j][p]) && i < k-1)
                    {
                        dp[i][j] = max(dp[i][j], dp[i+1][p] + days[j][i]);
                    }
                    if(i == 0 && (j == 0 || flights[0][j]))
                        res = max(res, dp[0][j]);
                }
            }
        }
        return res;
    }
};
