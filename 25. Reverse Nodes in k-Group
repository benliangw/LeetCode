/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
	void change(ListNode* pre, ListNode* next, int k)
	{
		ListNode* last = pre->next;
		ListNode* cur = last->next;
		while (cur != next)
		{
			last->next = cur->next;
			cur->next = pre->next;
			pre->next = cur;
			cur = last->next;
		}
	}

	ListNode* reverseKGroup(ListNode* head, int k) {
		ListNode* dummy = new ListNode(-1);
		if (head == NULL)
			return head;
		dummy->next = head;
		ListNode* pre = dummy;
		ListNode* cur = pre->next;
		while (true)
		{
			int i = 0;
			for (; i < k; i++)
			{
				if (cur == NULL)
					break;
				cur = cur->next;
			}
			if (i != k)
				break;
			change(pre, cur, k);
			for (int i = 0; i < k; i++)
				pre = pre->next;
		}
		return dummy->next;
	}
};
