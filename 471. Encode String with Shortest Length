class Solution {
public:
    string encode(string s) 
    {
        int n = s.length();
        vector<vector<string>> dp(n, vector<string>(n, ""));
        for(int len = 1; len <= n; len++)
        {
            for(int i = 0; i + len - 1 < n; i++)
            {
                int j = i + len - 1;
                dp[i][j] = s.substr(i, len);
                for(int k = i; k < j; k++)
                {
                    string left = dp[i][k];
                    string right = dp[k+1][j];
                    if(left.length() + right.length() < dp[i][j].length())
                    {
                        dp[i][j] = left + right;
                    }
                }
                string t = s.substr(i, j - i + 1);
                string replace = "";
                auto pos = (t + t).find(t, 1);
                if(pos >= t.length())
                    replace = t;
                else
                    replace = to_string(t.length() / pos) + '[' + dp[i][i+pos-1] + ']';
                if(replace.length() < dp[i][j].length())
                    dp[i][j] = replace;
            }
        }
        return dp[0][n-1];
    }
};
