/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
    {
        int val_l1 = l1->val;
        int val_l2 = l2->val;
        int val = (val_l1 + val_l2) % 10;
        int val_more = (val_l1 + val_l2) / 10;
        ListNode* start = new ListNode(val);
        ListNode* now = start;
        int tmp;
        while(l1->next != nullptr || l2->next != nullptr)
        {
            if(l1->next == nullptr)
            {
                val_l1 = 0;
                l2 = l2->next;
                val_l2 = l2->val;
            }
            else if(l2->next == nullptr)
            {
                val_l2 = 0;
                l1 = l1->next;
                val_l1 = l1->val;
            }
            else
            {
                l1 = l1->next;
                l2 = l2->next;
                val_l1 = l1->val;
                val_l2 = l2->val;
            }
            tmp = val_l1 + val_l2 + val_more;
            now->next = new ListNode(tmp % 10);
            now = now->next;
            val_more = tmp / 10;
        }
        if(val_more != 0)
        {
            ListNode* node_tmp = new ListNode(1);
            now->next = node_tmp;
        }
        return start;
    }
};
