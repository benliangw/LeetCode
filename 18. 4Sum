class Solution {
public:
	vector<vector<int>> fourSum(vector<int>& nums, int target) {
		set<vector<int>> res;
		sort(nums.begin(), nums.end());
        if(nums.size() < 4)
            return vector<vector<int>>(res.begin(), res.end());
		for (int i = 0; i < nums.size() - 3; i++)
		{
			for (int j = i + 1; j < nums.size() - 2; j++)
			{
				int left = j + 1;
				int right = nums.size() - 1;
				while (left < right)
				{
					if (nums[left] + nums[right] == target-nums[i]-nums[j])
					{
						res.insert({ nums[i], nums[j], nums[left], nums[right] });
						while (left < right && nums[left + 1] == nums[left])
							left++;
						while (left < right && nums[right - 1] == nums[right])
							right--;
						left++;
						right--;
					}
					else if (nums[left] + nums[right] > target-nums[i]-nums[j])
						right--;
					else
						left++;
				}
			}
		}
		return vector<vector<int>>(res.begin(), res.end());
	}
};
